from random import randint
#Решение оформлять в виде функций
#По возможности добавляйте docstring
#1- Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной позиции.
#Пример:
#[2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

def SumOfOddNumbers(List)->int: 
    """считает сумму чисел на нечетных позициях"""
    sum=0 
    for i in range(len(List)): #проходится до указанной цифры, не включая эту цифру
        if i%2 != 0: #ищем нечетную позицию
            sum=sum+List[i] #складываем
    return sum

list=[2,3,5,9,3]
print(f'text->{SumOfOddNumbers(list)}')

#2-Напишите программу, которая найдёт произведение пар чисел списка. 
#Парой считаем первый и последний элемент, второй и предпоследний и т.д.
#Пример:
#[2, 3, 4, 5, 6] => [12, 15, 16];
#[2, 3, 5, 6] => [12, 15]



#3-Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.
#Пример:
#[1.1, 1.2, 3.1, 5.17, 10.02] => 0.18 или 18
#[4.07, 5.1, 8.2444, 6.98] - 0.91 или 91


N=5 # Количество цифр для сравнения

nums = [randint(1, 20) for i in range(N)]
print (nums)

myMax = nums[0]
myMin = nums[0]

for i in range(N):
    if nums[i] > myMax : myMax=nums[i]
    if nums[i] < myMin : myMin=nums[i]
print ('Max:', myMax, 'Min:', myMin)

#4- Напишите программу, которая будет преобразовывать десятичное число в двоичное. 
#Подумайте, как это можно решить с помощью рекурсии.
#Пример:
#45 -> 101101
#3 -> 11
#2 -> 10
def convert(b):
    if (b == 0):
        return l
    dig = b % 2
    l.append(dig)
    convert(b // 2)
a = int(input("Введите число: "))
convert(a)
l.reverse()
print("Двоичная форма числа:")
for i in l:
    print(i)
#5-Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
#Пример:
#для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] Негафибоначчи

def fibonacci(n):
    if n in (1, 2):
        return 1
    return fibonacci(n - 1) + fibonacci(n - 2)
print(fibonacci(10))